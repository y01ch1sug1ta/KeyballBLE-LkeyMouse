#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 25
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W           &kp E         &kp R             &kp T                                        &kp Y                &kp U  &kp I      &kp O       &kp P
&mt LEFT_CONTROL A  &kp S           &kp D         &kp F             &kp G        &none            &kp AT_SIGN    &kp H                &kp J  &kp K      &lt 7 L     &lt 5 ENTER
&mt LEFT_SHIFT Z    &kp X           &kp C         &kp V             &kp B        &kp AT_SIGN      &kp B          &kp N                &kp M  &kt COMMA  &kp PERIOD  &lt 3 SLASH
&kp LCTRL           &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 SPACE  &lt 2 TAB        &kp BACKSPACE  &lt 3 RIGHT_COMMAND                                &lt 6 ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION       &kp AT_SIGN           &kp HASH    &kp DOLLAR  &kp PERCENT                      &kp CARET      &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_MUTE  &trans      &trans       &trans      &trans  &kp BACKSLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS             &kp EQUAL
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans      &trans      &trans       &trans      &trans  &kp GRAVE      &kp SEMICOLON     &kp SINGLE_QUOTE   &kp UNDERSCORE        &kp PLUS
&trans                &trans                &trans      &trans      &trans       &trans      &trans  &trans                                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        NUM {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                      &kp N6  &kp N7  &kp N8   &kp N9   &kp N0
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6      &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        ARROW {
            bindings = <
&kp LG(LC(Q))  &kp LC(LS(TAB))         &kp LA(LC(ENTER))      &kp LS(LG(NUMBER_4))     &trans                      &trans    &kp PAGE_UP         &kp UP_ARROW    &kp PAGE_DOWN        &trans
&trans         &kp LA(LC(LEFT_ARROW))  &kp LA(LC(BACKSPACE))  &kp LA(LC(RIGHT_ARROW))  &trans  &trans      &trans  &kp HOME  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp END
&trans         &trans                  &trans                 &trans                   &trans  &trans      &trans  &trans    &kp LA(LEFT_ARROW)  &trans          &kp LA(RIGHT_ARROW)  &trans
&trans         &trans                  &trans                 &trans                   &trans  &trans      &trans  &trans                                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans    &trans    &trans    &trans    &trans                          &trans    &trans    &trans    &trans    &trans
&mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &mkp MB5  &mkp MB1      &trans  &mkp MB4  &mkp MB1  &mkp MB3  &mkp MB2  &mkp MB5
&trans    &trans    &trans    &trans    &trans    &mkp MB2      &trans  &trans    &trans    &mkp MB1  &mkp MB2  &trans
&trans    &trans    &trans    &trans    &trans    &trans        &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp LC(W)  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB3   &mkp MB1         &mkp MB2           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans     &mkp MB4         &mkp MB5           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                 &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans                     &kp LC(W)  &kp LC(W)  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)                           &kp LC(W)      &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &trans  &trans
&lt_to_layer_0 5 KP_MINUS  &trans     &mkp MB1   &mkp MB2         &mkp MB3           &trans      &trans       &mkp MB3       &mkp MB1         &mkp MB2           &trans  &lt_to_layer_0 5 KP_MINUS
&trans                     &trans     &mkp MB4   &mkp MB5         &mkp MB5           &trans      &trans       &trans         &mkp MB4         &mkp MB5           &trans  &trans
&trans                     &trans     &trans     &trans           &trans             &trans      &kp PAGE_UP  &kp PAGE_DOWN                                              &trans
            >;
        };
    };
};
